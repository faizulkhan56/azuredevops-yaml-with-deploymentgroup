trigger:
- main

pool:
  name: Default

variables:
  imageName: 'dotnetapp'
  acrLoginServer: 'mycompanyacr212.azurecr.io'
  tag: '$(Build.BuildId)'

steps:
- checkout: self

- task: Docker@2
  displayName: 'Build and Push Image to ACR'
  inputs:
    containerRegistry: 'acr-service-conn'
    repository: '$(imageName)'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: |
      $(tag)
      latest

- task: Bash@3
  displayName: 'üõ°Ô∏è Trivy Vulnerability Scan'
  inputs:
    targetType: 'inline'
    script: |
      # Make sure the staging dir exists
      mkdir -p "$BUILD_ARTIFACTSTAGINGDIRECTORY"

      image="${ACRLOGINSERVER}/${IMAGENAME}:${TAG}"
      echo "Scanning image $image with Trivy‚Ä¶"

      trivy image \
        --no-progress \
        --format json \
        --output "$BUILD_ARTIFACTSTAGINGDIRECTORY/trivy-report.json" \
        "$image"

      echo "‚úÖ Trivy report at: $BUILD_ARTIFACTSTAGINGDIRECTORY/trivy-report.json"

- task: PublishPipelineArtifact@1
  displayName: 'üìÑ Publish Trivy Report'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/trivy-report.json'
    artifact: 'trivy-report'

- task: PublishBuildArtifacts@1
  displayName: 'Publish dummy artifact to trigger release'
  inputs:
    PathtoPublish: 'README.md'
    ArtifactName: 'drop'
    publishLocation: 'Container'

